version: '3.8'

services:
  user-service:
    build: ./microservices/user-service
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
    volumes:
      - ./microservices/user-service:/app
      - /app/node_modules
    networks:
      - microservices-network
  
  product-service:
    container_name: product-service
    build:
      context: ./microservices/product-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
    volumes:
      - ./product-service:/app
      - /app/node_modules
    networks:
      - microservices-network
    command: npm run dev
  
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - microservices-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3030:3000"
    volumes:
      - ./infra/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: